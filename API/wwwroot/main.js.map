{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX+C;AACa;AACH;AACD;AACL;AACM;AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;AACF;;AACrD,qDAAqD;AACrD,sDAAsD;AAqD/C,MAAM,cAAc;;4EAAd,cAAc;2GAAd,cAAc;+GAjDvB,yDAAU;QACV,sEAAkB;QAClB,mEAAe;QACf,kEAAgB;QAChB,8DAAc;QACd,4DAAa;QACb,kEAAc;QACd,iFAAqB;QACrB,mEAAc;QACd,iFAAoB;QACpB,sEAAe;QACf,mFAAqB;QACrB,kEAAa;QACb,0EAAiB;QACjB,oEAAc;QACd,wEAAgB;QAChB,8EAAmB;QACnB,sEAAe;QACf,wEAAgB;QAChB,4EAAkB;QAClB,2EAAiB;QACjB,kEAAa;QACb,oEAAc;QACd,kEAAa;QACb,kEAAa;QACb,wEAAmB;QACnB,4EAAkB;QAClB,iFAAoB;QACpB,yFAAwB;QACxB,oEAAc;QACd,oEAAe;QACf,sEAAe;QACf,wEAAgB;QAChB,sEAAe;QACf,iFAAoB;QACpB,2EAAiB;QACjB,kEAAa;QACb,oEAAc;QACd,kEAAa;QACb,wEAAgB;QAChB,wEAAgB;QAChB,kEAAa;QACb,gEAAa;QACb,8DAAY;QACZ,oEAAe;mIAKN,cAAc,cAjDvB,yDAAU;QACV,sEAAkB;QAClB,mEAAe;QACf,kEAAgB;QAChB,8DAAc;QACd,4DAAa;QACb,kEAAc;QACd,iFAAqB;QACrB,mEAAc;QACd,iFAAoB;QACpB,sEAAe;QACf,mFAAqB;QACrB,kEAAa;QACb,0EAAiB;QACjB,oEAAc;QACd,wEAAgB;QAChB,8EAAmB;QACnB,sEAAe;QACf,w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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./material.module.ts","./src/app/_directives/has-role.directive.ts","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_interceptors/loading.interceptor.ts","./src/app/_models/pagination.ts","./src/app/_models/userParams.ts","./src/app/_modules/shared.module.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/_services/account.service.ts","./src/app/_services/admin.service.ts","./src/app/_services/busy.service.ts","./src/app/_services/confirm.service.ts","./src/app/_services/members.service.ts","./src/app/_services/message.service.ts","./src/app/_services/paginationHelper.ts","./src/app/_services/presence.service.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n// import { CdkMenuModule } from '@angular/cdk/menu';\r\n// import { DialogModule } from '@angular/cdk/dialog';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkAccordionModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    // DialogModule,\r\n    // CdkMenuModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]'\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n\r\n  constructor(private viewContainerRef: ViewContainerRef, \r\n    private templateRef: TemplateRef<any>, \r\n    private accountService: AccountService) {\r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n        this.user = user;\r\n      })\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    // clear view if no roles\r\n    if (!this.user?.roles || this.user == null) {\r\n      this.viewContainerRef.clear();\r\n      return;\r\n    }\r\n\r\n    if (this.user?.roles.some(r  => this.appHasRole.includes(r))) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainerRef.clear();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.scss'],\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY',\r\n    };\r\n  }\r\n  filter(d: Date | null) {\r\n    console.log(d);\r\n  }\r\n\r\n  writeValue(obj: any): void {}\r\n\r\n  registerOnChange(fn: any): void {}\r\n\r\n  registerOnTouched(fn: any): void {}\r\n}\r\n","<mat-form-field appearance=\"fill\" class=\"example-half-width\">\r\n  <mat-label>Choose a date</mat-label>\r\n  <input\r\n    matInput\r\n    [matDatepicker]=\"datepicker\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n  />\r\n  <mat-hint>MM/DD/YYYY</mat-hint>\r\n  <mat-datepicker-toggle matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #datepicker>\r\n    <mat-datepicker-actions>\r\n      <button mat-button matDatepickerCancel>Cancel</button>\r\n      <button mat-raised-button color=\"primary\" matDatepickerApply>\r\n        Apply\r\n      </button>\r\n    </mat-datepicker-actions>\r\n  </mat-datepicker>\r\n\r\n  <mat-error *ngIf=\"ngControl.control.errors?.required\">\r\n    {{ label }} is required\r\n  </mat-error>\r\n</mat-form-field>\r\n\r\n<!-- <div class=\"mb-3\">\r\n  <input\r\n    type=\"text\"\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n    bsDatepicker\r\n    [bsConfig]=\"bsConfig\"\r\n    [maxDate]=\"maxDate\"\r\n  />\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\r\n    {{ label }} is required\r\n  </div>\r\n</div> -->\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.scss']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n  \r\n}\r\n","<mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n  <mat-label>{{ label }}</mat-label>\r\n  <input\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    type=\"{{ type }}\"\r\n    matInput\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n  />\r\n  <mat-error *ngIf=\"ngControl.control.errors?.required\">\r\n    Please enter a {{ label }}\r\n  </mat-error>\r\n  <mat-error *ngIf=\"ngControl.control.errors?.minlength\">\r\n    {{ label }} must be at least\r\n    {{ ngControl.control.errors.minlength[\"requiredLength\"] }}\r\n  </mat-error>\r\n  <mat-error *ngIf=\"ngControl.control.errors?.maxlength\">\r\n    {{ label }} must be at most\r\n    {{ ngControl.control.errors.maxlength[\"requiredLength\"] }}\r\n  </mat-error>\r\n  <mat-error *ngIf=\"ngControl.control.errors?.isMatching\">\r\n    Passwords do not match\r\n  </mat-error>\r\n</mat-form-field>\r\n\r\n<!-- <div class=\"mb-3\">\r\n  <input\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    type=\"{{ type }}\"\r\n    class=\"form-control\"\r\n    [formControl]=\"ngControl.control\"\r\n    placeholder=\"{{ label }}\"\r\n  />\r\n</div> -->\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map((user) => {\r\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\r\n          return true;\r\n        }\r\n        this._snackBar.open('You cannot enter this area', 'Dismiss', {\r\n          panelClass: ['red-snackbar'],\r\n          duration: 5000,\r\n          verticalPosition: 'bottom',\r\n          horizontalPosition: 'right',\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map((user) => {\r\n        if (user) return true;\r\n        this._snackBar.open('You shall not pass!', 'Dismiss', {\r\n          panelClass: ['red-snackbar'],\r\n          duration: 5000,\r\n          verticalPosition: 'bottom',\r\n          horizontalPosition: 'right',\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n\r\n  constructor(private confirmService: ConfirmService) {}\r\n\r\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\r\n    if (component.editForm.dirty) {\r\n      return this.confirmService.confirm()\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router, private _snackBar: MatSnackBar) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error) => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key]);\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if (typeof error.error === 'object') {\r\n                this._snackBar.open(error.statusText, 'Dismiss', {\r\n                  panelClass: ['red-snackbar'],\r\n                  duration: 5000,\r\n                  verticalPosition: 'bottom',\r\n                  horizontalPosition: 'right',\r\n                });\r\n              } else {\r\n                this._snackBar.open(error.error, 'Dismiss', {\r\n                  panelClass: ['red-snackbar'],\r\n                  duration: 5000,\r\n                  verticalPosition: 'bottom',\r\n                  horizontalPosition: 'right',\r\n                });\r\n              }\r\n              break;\r\n            case 401:\r\n              this._snackBar.open(error.statusText, 'Dismiss', {\r\n                panelClass: ['red-snackbar'],\r\n                duration: 5000,\r\n                verticalPosition: 'bottom',\r\n                horizontalPosition: 'right',\r\n              });\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {\r\n                state: { error: error.error },\r\n              };\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this._snackBar.open(\r\n                'Something unexpected went wrong',\r\n                'Dismiss',\r\n                {\r\n                  panelClass: ['red-snackbar'],\r\n                  duration: 5000,\r\n                  verticalPosition: 'bottom',\r\n                  horizontalPosition: 'right',\r\n                }\r\n              );\r\n              console.log(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      })\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    )\r\n  }\r\n}\r\n","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}","import { User } from './user';\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 0;\r\n    pageSize = 10;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n    constructor(private memberService: MembersService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username'));\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PresenceService } from './presence.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private presence: PresenceService) { }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\r\n      map((user: User) => {\r\n        if (user) {\r\n         this.setCurrentUser(user);\r\n         this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsersWithRoles() {\r\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]) {\r\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n\r\n  constructor(private spinnerService: NgxSpinnerService) { }\r\n\r\n  busy() {\r\n    this.busyRequestCount++;\r\n    this.spinnerService.show(undefined, {\r\n      type: 'line-scale-party',\r\n      bdColor: 'rgba(255,255,255,0)',\r\n      color: '#333333'\r\n    });\r\n  }\r\n\r\n  idle() {\r\n    this.busyRequestCount--;\r\n    if (this.busyRequestCount <= 0) {\r\n      this.busyRequestCount = 0;\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n  bsModelRef: BsModalRef;\r\n\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  confirm(title = 'Confirmation', \r\n    message = 'Are you sure you want to do this?', \r\n    btnOkText = 'Ok', \r\n    btnCancelText = 'Cancel'): Observable<boolean> {\r\n      const config = {\r\n        initialState: {\r\n          title, \r\n          message,\r\n          btnOkText,\r\n          btnCancelText\r\n        }\r\n      }\r\n    this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\r\n    \r\n    return new Observable<boolean>(this.getResult());\r\n  }\r\n\r\n  private getResult() {\r\n    return (observer) => {\r\n      const subscription = this.bsModelRef.onHidden.subscribe(() => {\r\n        observer.next(this.bsModelRef.content.result);\r\n        observer.complete();\r\n      });\r\n\r\n      return {\r\n        unsubscribe() {\r\n          subscription.unsubscribe();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Member } from '../_models/member';\r\nimport { of, pipe } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\nimport { User } from '../_models/user';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n\r\n  constructor(private http: HttpClient, private accountService: AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n      this.user = user;\r\n      this.userParams = new UserParams(user);\r\n    })\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params: UserParams) {\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams() {\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\r\n    if (response) {\r\n      return of(response);\r\n    }\r\n\r\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\r\n\r\n    params = params.append('minAge', userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\r\n      .pipe(map(response => {\r\n        this.memberCache.set(Object.values(userParams).join('-'), response);\r\n        return response;\r\n      }))\r\n  }\r\n\r\n  getMember(username: string) {\r\n    const member = [...this.memberCache.values()]\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])\r\n      .find((member: Member) => member.username === username);\r\n\r\n    if (member) {\r\n      return of(member);\r\n    }\r\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    )\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/' + username, {})\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\r\n  }\r\n\r\n  \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { BusyService } from './busy.service';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) { }\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build()\r\n\r\n    this.hubConnection.start()\r\n      .catch(error => console.log(error))\r\n      .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', messages => {\r\n      this.messageThreadSource.next(messages);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessage', message => {\r\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n        this.messageThreadSource.next([...messages, message])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some(x => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n          messages.forEach(message => {\r\n            if (!message.dateRead) {\r\n              message.dateRead = new Date(Date.now())\r\n            }\r\n          })\r\n          this.messageThreadSource.next([...messages]);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection) {\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n      map(response => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  export function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('pageNumber', pageNumber.toString());\r\n    params = params.append('pageSize', pageSize.toString());\r\n\r\n    return params;\r\n  }","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  createHubConnection(user: User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence', {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection.start().catch((error) => console.log(error));\r\n\r\n    this.hubConnection.on('UserIsOnline', (username) => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\r\n        this.onlineUsersSource.next([...usernames, username]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('UserIsOffline', (username) => {\r\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\r\n        this.onlineUsersSource.next([\r\n          ...usernames.filter((x) => x !== username),\r\n        ]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\r\n      this.onlineUsersSource.next(usernames);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\r\n      let snackBarRef = this._snackBar.open(\r\n        `${knownAs} has sent you a new message!`,\r\n        'Check',\r\n        {\r\n          duration: 5000,\r\n          verticalPosition: 'bottom',\r\n          horizontalPosition: 'right',\r\n        }\r\n      );\r\n      snackBarRef\r\n        .onAction()\r\n        .subscribe(() =>\r\n          this.router.navigateByUrl('/members/' + username + '?tab=3')\r\n        );\r\n    });\r\n  }\r\n\r\n  stopHubConnection() {\r\n    this.hubConnection.stop().catch((error) => console.log(error));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.scss']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n    <tabset class=\"member-tabset\">\r\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\r\n            <div class=\"container\">\r\n                <app-user-management></app-user-management>\r\n            </div>\r\n        </tab>\r\n        <tab heading='Photo management' *appHasRole='[\"Admin\", \"Moderator\"]'>\r\n            <div class=\"container\">\r\n                <app-photo-management></app-photo-management>\r\n            </div>\r\n        </tab>\r\n    </tabset>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.scss']\r\n})\r\nexport class PhotoManagementComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>photo-management works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.scss']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: Partial<User[]>;\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    this.adminService.getUsersWithRoles().subscribe(users => {\r\n      this.users = users;\r\n    })\r\n  }\r\n\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user)\r\n      }\r\n    }\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\r\n      const rolesToUpdate = {\r\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\r\n      };\r\n      if (rolesToUpdate) {\r\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\r\n          user.roles = [...rolesToUpdate.roles]\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const availableRoles: any[] = [\r\n      {name: 'Admin', value: 'Admin'},\r\n      {name: 'Moderator', value: 'Moderator'},\r\n      {name: 'Member', value: 'Member'}\r\n    ];\r\n\r\n    availableRoles.forEach(role => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n      if (!isMatch) {\r\n        role.checked = false;\r\n        roles.push(role);\r\n      }\r\n    })\r\n    return roles;\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 30%;\">Username</th>\r\n                <th style=\"width: 40%;\">Active roles</th>\r\n                <th style=\"width: 30%;\"></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let user of users\">\r\n                <td>{{user.username}}</td>\r\n                <td>{{user.roles}}</td>\r\n                <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button></td>\r\n            </tr>\r\n        </tbody>\r\n\r\n    </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'members', component: MemberListComponent},\r\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\r\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]},\r\n      {path: 'lists', component: ListsComponent},\r\n      {path: 'messages', component: MessagesComponent},\r\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\r\n    ]\r\n  },\r\n  {path: 'errors', component: TestErrorsComponent},\r\n  {path: 'not-found', component: NotFoundComponent},\r\n  {path: 'server-error', component: ServerErrorComponent},\r\n  {path: '**', component: NotFoundComponent, pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from './_models/user';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'The Dating app';\r\n  users: any;\r\n\r\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\r\n\r\n  ngOnInit() {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.accountService.setCurrentUser(user);\r\n      this.presence.createHubConnection(user);\r\n    }\r\n\r\n  }\r\n}\r\n","<ngx-spinner>\r\n    <h3>Loading...</h3>\r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\nimport { MaterialModule } from 'material.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    MaterialModule,\r\n    FlexLayoutModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Not found</h1>\r\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.scss']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  error: any;\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.error;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\r\n<ng-container *ngIf=\"error\">\r\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\r\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\r\n    <p>What to do next?</p>\r\n    <ol>\r\n        <li>Open the chrome dev tools</li>\r\n        <li>Inspect the network tab</li>\r\n        <li>Check the failing request</li>\r\n        <li>Examine the request URL - make sure it is correct</li>\r\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\r\n    </ol>\r\n    <p>Following is the stack trace - this is where your investigation should start!</p>\r\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.scss']\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400ValidationError() {\r\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\r\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\r\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\r\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\r\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\r\n        Test 400 Validation Error</button>\r\n\r\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { Router } from '@angular/router';\r\nimport { RegisterComponent } from '../register/register.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public accountService: AccountService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  openRegister() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n\r\n    const dialogRef = this.dialog.open(RegisterComponent, dialogConfig);\r\n\r\n    dialogRef\r\n      .afterClosed()\r\n      .subscribe(() => this.router.navigateByUrl('/members'));\r\n  }\r\n\r\n  registerToggle() {\r\n    this.registerMode = !this.registerMode;\r\n  }\r\n\r\n  cancelRegisterMode(event: boolean) {\r\n    this.registerMode = event;\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\" id=\"step1\">\r\n    <h1>Find your match</h1>\r\n    <p class=\"lead\">\r\n      Come on in to view your matches... all you need to do is sign up!\r\n    </p>\r\n    <div class=\"text-center\">\r\n      <button mat-raised-button color=\"primary\" (click)=\"openRegister()\">\r\n        Register\r\n      </button>\r\n      <button mat-raised-button color=\"warn\">Learn more</button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MembersService } from '../_services/members.service';\r\nimport Driver from 'driver.js';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { MatGridList } from '@angular/material/grid-list';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.scss'],\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  @ViewChild('grid') grid: MatGridList;\r\n  gridByBreakpoint = {\r\n    xl: 5,\r\n    lg: 3,\r\n    md: 3,\r\n    sm: 2,\r\n    xs: 1,\r\n  };\r\n\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination;\r\n  driver: Driver;\r\n\r\n  constructor(\r\n    private memberService: MembersService,\r\n    private media: MediaObserver\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n    // this.startNavigationGuide();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.media.asObservable().subscribe((changes: MediaChange[]) => {\r\n      this.grid.cols = this.gridByBreakpoint[changes[0].mqAlias];\r\n    });\r\n  }\r\n\r\n  loadLikes() {\r\n    this.memberService\r\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\r\n      .subscribe((response) => {\r\n        this.members = response.result;\r\n        this.pagination = response.pagination;\r\n        this.pagination.currentPage = response.pagination.currentPage - 1;\r\n      });\r\n  }\r\n\r\n  pageChanged(event: MatPaginator) {\r\n    console.log('event', event);\r\n    this.pageNumber = event.pageIndex + 1;\r\n    this.pageSize = event.pageSize;\r\n    this.loadLikes();\r\n  }\r\n  \r\n  startNavigationGuide() {\r\n    if (!this.driver) {\r\n      this.driver = new Driver({\r\n        animate: true,\r\n        keyboardControl: true,\r\n      });\r\n\r\n      const steps = [\r\n        {\r\n          element: '#login-step2',\r\n          popover: {\r\n            title: 'Lists',\r\n            description:\r\n              'Menu that shows members you already liked and who liked you.',\r\n            position: 'bottom-center',\r\n          },\r\n        },\r\n      ];\r\n      console.log('### this driver', steps);\r\n      this.driver.defineSteps(steps);\r\n      this.driver.start();\r\n    }\r\n  }\r\n\r\n  resetNavigationGuide() {\r\n    if (this.driver) {\r\n      this.driver.reset();\r\n      this.driver = undefined;\r\n    }\r\n  }\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>\r\n    {{ predicate === \"liked\" ? \"Members I like\" : \"Members who like me\" }}\r\n  </h2>\r\n</div>\r\n<section class=\"example-section mb-4\">\r\n  <mat-button-toggle-group\r\n    name=\"fontStyle\"\r\n    aria-label=\"Font Style\"\r\n    [(ngModel)]=\"predicate\"\r\n  >\r\n    <mat-button-toggle color=\"primary\" value=\"liked\" (click)=\"loadLikes()\">\r\n      Members I like\r\n    </mat-button-toggle>\r\n    <mat-button-toggle color=\"primary\" value=\"likedBy\" (click)=\"loadLikes()\">\r\n      Members who like me\r\n    </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</section>\r\n\r\n<mat-grid-list #grid cols=\"4\" gutterSize=\"10px\" rowHeight=\"414px\">\r\n  <mat-grid-tile *ngFor=\"let member of members\">\r\n    <app-member-card [member]=\"member\"></app-member-card>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n<mat-paginator\r\n  *ngIf=\"pagination\"\r\n  [length]=\"pagination.totalItems\"\r\n  [pageSize]=\"pagination.itemsPerPage\"\r\n  [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n  [pageIndex]=\"pagination.currentPage\"\r\n  (page)=\"pageChanged($event)\"\r\n  class=\"mt-5\"\r\n  aria-label=\"Select page\"\r\n>\r\n</mat-paginator>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { map } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  hide = true;\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<LoginComponent>,\n    public accountService: AccountService,\n    private _snackBar: MatSnackBar\n  ) {\n    this.form = fb.group({\n      username: [null, [Validators.required]],\n      password: ['Pa$$w0rd', [Validators.required]],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  login() {\n    const { username, password } = this.form.value;\n    const loginForm = {\n      username,\n      password,\n    };\n\n    this.accountService.login(loginForm).subscribe({\n      next: (res) => {\n        console.log('### successfully logged in ', res);\n        this._snackBar.open('successfully logged in', 'Dance', {\n          panelClass: ['blue-snackbar'],\n          duration: 5000,\n          verticalPosition: 'bottom',\n          horizontalPosition: 'right',\n        });\n        this.dialogRef.close(true);\n      },\n      error: (err) => {\n        console.log('### ERROR', err);\n        this._snackBar.open('Error occured', 'Dance', {\n          panelClass: ['red-snackbar'],\n          duration: 5000,\n          verticalPosition: 'bottom',\n          horizontalPosition: 'right',\n        });\n      },\n    });\n  }\n\n  ok() {}\n}\n","<div>\n  <h2>Login</h2>\n</div>\n<form class=\"\" [formGroup]=\"form\">\n  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n    <mat-label>Username</mat-label>\n    <input\n      matInput\n      type=\"text\"\n      placeholder=\"Username\"\n      formControlName=\"username\"\n    />\n  </mat-form-field>\n\n  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n    <mat-label>Enter your password</mat-label>\n    <input\n      matInput\n      [type]=\"hide ? 'password' : 'text'\"\n      formControlName=\"password\"\n    />\n    <button\n      mat-icon-button\n      matSuffix\n      (click)=\"hide = !hide\"\n      [attr.aria-label]=\"'Hide password'\"\n      [attr.aria-pressed]=\"hide\"\n    >\n      <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n    </button>\n  </mat-form-field>\n</form>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-raised-button cdkFocusInitial color=\"primary\" (click)=\"login()\">\n    Login\n  </button>\n</mat-dialog-actions>\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.scss'],\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n\r\n  constructor(\r\n    private memberService: MembersService,\r\n    public presence: PresenceService,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addLike(member: Member) {\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this._snackBar.open(`You have liked ${member.knownAs}`, 'okay', {\r\n        duration: 5000,\r\n        verticalPosition: 'bottom',\r\n        horizontalPosition: 'right',\r\n      });\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"example-card\">\r\n  <mat-card-header>\r\n    <div mat-card-avatar class=\"d-flex align-items-center justify-content-center font-md\">\r\n      <span\r\n        [class.is-online]=\"\r\n          (presence.onlineUsers$ | async).includes(member.username)\r\n        \"\r\n      >\r\n        <i class=\"fa fa-user px-2\" style=\"font-size: 20px;\"></i>\r\n      </span>\r\n    </div>\r\n    <mat-card-title> {{ member.knownAs }}, {{ member.age }} </mat-card-title>\r\n    <mat-card-subtitle>{{ member.city }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img\r\n    mat-card-image\r\n    src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n    alt=\"{{ member.knownAs }}\"\r\n    style=\"width: 250px\"\r\n  />\r\n\r\n  <mat-card-content> </mat-card-content>\r\n  <mat-card-actions align=\"center\">\r\n    <button mat-icon-button routerLink=\"/members/{{ member.username }}\">\r\n      <mat-icon>person</mat-icon>\r\n    </button>\r\n\r\n    <button mat-icon-button (click)=\"addLike(member)\">\r\n      <mat-icon>favorite</mat-icon>\r\n    </button>\r\n    <button\r\n      mat-icon-button\r\n      routerLink=\"/members/{{ member.username }}\"\r\n      [queryParams]=\"{ tab: 3 }\"\r\n    >\r\n      <mat-icon> mail_outline</mat-icon>\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n<!-- <mat-card>\r\n  <mat-card-header>\r\n    <div mat-card-avatar>\r\n      <span\r\n        [class.is-online]=\"\r\n          (presence.onlineUsers$ | async).includes(member.username)\r\n        \"\r\n      >\r\n        <i class=\"fa fa-user mr-2\"></i>\r\n      </span>\r\n    </div>\r\n    <mat-card-title> {{ member.knownAs }}, {{ member.age }} </mat-card-title>\r\n    <mat-card-subtitle>{{ member.city }}</mat-card-subtitle>\r\n  </mat-card-header>\r\n  <img\r\n    mat-card-image\r\n    src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n    alt=\"{{ member.knownAs }}\"\r\n  />\r\n  <mat-card-content> </mat-card-content>\r\n  <mat-card-actions align=\"center\">\r\n    <button mat-icon-button routerLink=\"/members/{{ member.username }}\">\r\n      <mat-icon>person</mat-icon>\r\n    </button>\r\n\r\n    <button mat-icon-button (click)=\"addLike(member)\">\r\n      <mat-icon>favorite</mat-icon>\r\n    </button>\r\n    <button\r\n      mat-icon-button\r\n      routerLink=\"/members/{{ member.username }}\"\r\n      [queryParams]=\"{ tab: 3 }\"\r\n    >\r\n      <mat-icon> mail_outline</mat-icon>\r\n    </button>\r\n  </mat-card-actions>\r\n</mat-card> -->\r\n\r\n<!-- <div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <img\r\n      src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n      alt=\"{{ member.knownAs }}\"\r\n      class=\"card-img-top\"\r\n    />\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\">\r\n        <button\r\n          routerLink=\"/members/{{ member.username }}\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <i class=\"fa fa-user\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button (click)=\"addLike(member)\" class=\"btn btn-primary\">\r\n          <i class=\"fa fa-heart\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button\r\n          routerLink=\"/members/{{ member.username }}\"\r\n          [queryParams]=\"{ tab: 3 }\"\r\n          class=\"btn btn-primary\"\r\n        >\r\n          <i class=\"fa fa-envelope\"></i>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      <span\r\n        [class.is-online]=\"\r\n          (presence.onlineUsers$ | async).includes(member.username)\r\n        \"\r\n      >\r\n        <i class=\"fa fa-user mr-2\"></i>\r\n      </span>\r\n\r\n      {{ member.knownAs }}, {{ member.age }}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">{{ member.city }}</p>\r\n  </div>\r\n</div> -->\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.scss']\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab: TabDirective;\r\n  messages: Message[] = [];\r\n  user: User;\r\n\r\n  constructor(public presence: PresenceService, private route: ActivatedRoute, \r\n    private messageService: MessageService, private accountService: AccountService,\r\n    private router: Router) { \r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.member = data.member;\r\n    })\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n    })\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ]\r\n\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url\r\n      })\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMessages() {\r\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\r\n      this.messages = messages;\r\n    })\r\n  }\r\n\r\n  selectTab(tabId: number) {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective) {\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\" >\r\n                    <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n                </div>\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button class=\"btn btn-primary\">Like</button>\r\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-success\">Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\" #memberTabs>\r\n            <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\r\n                <h4>Interests</h4>\r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\r\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" \r\n                    style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\r\n                <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { take } from 'rxjs/operators';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.scss'],\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification(\r\n    $event: any\r\n  ) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private memberService: MembersService,\r\n    private _snackBar: MatSnackBar\r\n  ) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember() {\r\n    this.memberService.getMember(this.user.username).subscribe((member) => {\r\n      this.member = member;\r\n    });\r\n  }\r\n\r\n  updateMember() {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this._snackBar.open(`Profile updated successfully`, 'okay', {\r\n        duration: 5000,\r\n        verticalPosition: 'bottom',\r\n      });\r\n      this.editForm.reset(this.member);\r\n    });\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n        <h1>Your profile</h1>\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n            <strong>Information: </strong> You have made changes.  Any unsaved changes will be lost\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive | timeago}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-success btn-block\">Save Changes</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\">\r\n            <tab heading='About {{member.knownAs}}'>\r\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\r\n                    <h4>Description</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Looking for</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Interests</h4>\r\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\r\n                    <h4 class=\"mt-2\">Location Details: </h4>\r\n                    <div class=\"form-inline\">\r\n                        <label for=\"city\">City: </label>\r\n                        <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\r\n                        <label for=\"city\">Country: </label>\r\n                        <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\r\n                    </div>\r\n                </form>\r\n               \r\n            </tab>\r\n            <tab heading='Edit Photos'>\r\n                <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from 'src/app/_models/user';\r\nimport Driver from 'driver.js';\r\nimport { MatGridList } from '@angular/material/grid-list';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.scss'],\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  @ViewChild('grid') grid: MatGridList;\r\n  gridByBreakpoint = {\r\n    xl: 5,\r\n    lg: 3,\r\n    md: 3,\r\n    sm: 2,\r\n    xs: 1,\r\n  };\r\n\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [\r\n    { value: 'male', display: 'Males' },\r\n    { value: 'female', display: 'Females' },\r\n  ];\r\n\r\n  driver: Driver;\r\n\r\n  constructor(\r\n    private memberService: MembersService,\r\n    private media: MediaObserver\r\n  ) {\r\n    this.userParams = this.memberService.getUserParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n    // this.startNavigationGuide();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.media.asObservable().subscribe((changes: MediaChange[]) => {\r\n      this.grid.cols = this.gridByBreakpoint[changes[0].mqAlias];\r\n    });\r\n  }\r\n\r\n  loadMembers() {\r\n    console.log(this.userParams);\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.memberService.getMembers(this.userParams).subscribe((response) => {\r\n      console.log('### RESPONSE', response);\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n      this.pagination.currentPage = response.pagination.currentPage - 1;\r\n    });\r\n  }\r\n  change(e: MatSelect) {\r\n    this.loadMembers();\r\n  }\r\n  resetFilters() {\r\n    this.userParams = this.memberService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event: MatPaginator) {\r\n    this.userParams.pageSize = event.pageSize;\r\n    this.userParams.pageNumber = event.pageIndex + 1;\r\n    console.log('### event', this.userParams);\r\n\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n\r\n  startNavigationGuide() {\r\n    if (!this.driver) {\r\n      this.driver = new Driver({\r\n        animate: true,\r\n        keyboardControl: true,\r\n      });\r\n\r\n      const steps = [\r\n        {\r\n          element: '#login-step1',\r\n          popover: {\r\n            className: 'first-step-popover-class',\r\n            title: 'Matches',\r\n            description:\r\n              'Menu that shows a list of members who might interest you. Please use filter to find someone you love!',\r\n            position: 'bottom-center',\r\n          },\r\n        },\r\n      ];\r\n      console.log('### this driver', steps);\r\n      this.driver.defineSteps(steps);\r\n      this.driver.start();\r\n    }\r\n  }\r\n\r\n  resetNavigationGuide() {\r\n    if (this.driver) {\r\n      this.driver.reset();\r\n      this.driver = undefined;\r\n    }\r\n  }\r\n}\r\n","<div class=\"d-inline-block\">\r\n  <section class=\"example-section\">\r\n    <mat-radio-group\r\n      aria-label=\"Select a gender\"\r\n      [(ngModel)]=\"userParams.gender\"\r\n    >\r\n      <mat-radio-button\r\n        class=\"example-margin\"\r\n        *ngFor=\"let gender of genderList\"\r\n        [value]=\"gender.value\"\r\n      >\r\n        {{ gender.display }}\r\n      </mat-radio-button>\r\n    </mat-radio-group>\r\n  </section>\r\n  <section class=\"example-section\">\r\n    <mat-form-field class=\"example-margin example-width\" appearance=\"fill\">\r\n      <mat-label>Age From</mat-label>\r\n      <input matInput type=\"number\" [(ngModel)]=\"userParams.minAge\" />\r\n    </mat-form-field>\r\n    <mat-form-field class=\"example-margin example-width\" appearance=\"fill\">\r\n      <mat-label>Age To</mat-label>\r\n      <input matInput type=\"number\" [(ngModel)]=\"userParams.maxAge\" />\r\n    </mat-form-field>\r\n  </section>\r\n  <section class=\"example-section\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"warn\"\r\n      class=\"mx-2\"\r\n      (click)=\"resetFilters()\"\r\n    >\r\n      Reset\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      class=\"mx-2\"\r\n      (click)=\"loadMembers()\"\r\n    >\r\n      Search\r\n    </button>\r\n  </section>\r\n</div>\r\n\r\n<div class=\"mt-4 mb-1\" fxLayoutAlign=\"space-between end\">\r\n  <h3>Your matches - {{ pagination?.totalItems }} found</h3>\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Sort By</mat-label>\r\n    <mat-select\r\n      (selectionChange)=\"change($event)\"\r\n      [(ngModel)]=\"userParams.orderBy\"\r\n    >\r\n      <mat-option value=\"created\">Newest Member</mat-option>\r\n      <mat-option value=\"lastActive\">Last Active</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n\r\n<!-- <div class=\"container mt-3\">\r\n  <form\r\n    #form=\"ngForm\"\r\n    class=\"d-flex mb-3\"\r\n    (ngSubmit)=\"loadMembers()\"\r\n    autocomplete=\"off\"\r\n  >\r\n    <div class=\"d-flex mx-2\">\r\n      <label class=\"col-form-label me-2\">Age from: </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ml-1\"\r\n        style=\"width: 70px\"\r\n        name=\"minAge\"\r\n        [(ngModel)]=\"userParams.minAge\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"d-flex px-2\">\r\n      <label class=\"col-form-label me-2\">Age to: </label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ml-1\"\r\n        style=\"width: 70px\"\r\n        name=\"maxAge\"\r\n        [(ngModel)]=\"userParams.maxAge\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"d-flex px-2\">\r\n      <label class=\"col-form-label me-2\">Show: </label>\r\n      <select\r\n        name=\"gender\"\r\n        style=\"width: 130px\"\r\n        [(ngModel)]=\"userParams.gender\"\r\n        class=\"form-control ml-1\"\r\n      >\r\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n          {{ gender.display }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <button class=\"btn btn-primary ms-1\" type=\"submit\">Apply Filters</button>\r\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ms-1\" type=\"submit\">\r\n      Reset Filters\r\n    </button>\r\n  </form>\r\n  <div class=\"col\">\r\n    <div class=\"btn-group float-end\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        name=\"orderBy\"\r\n        (click)=\"loadMembers()\"\r\n        btnRadio=\"lastActive\"\r\n        [(ngModel)]=\"userParams.orderBy\"\r\n      >\r\n        Last Active\r\n      </button>\r\n\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        name=\"orderBy\"\r\n        (click)=\"loadMembers()\"\r\n        btnRadio=\"created\"\r\n        [(ngModel)]=\"userParams.orderBy\"\r\n      >\r\n        Newest Members\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<mat-grid-list #grid cols=\"4\" gutterSize=\"10px\" rowHeight=\"414px\">\r\n  <mat-grid-tile *ngFor=\"let member of members\">\r\n    <app-member-card [member]=\"member\"></app-member-card>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n<mat-paginator\r\n  *ngIf=\"pagination\"\r\n  [length]=\"pagination.totalItems\"\r\n  [pageSize]=\"pagination.itemsPerPage\"\r\n  [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n  [pageIndex]=\"pagination.currentPage\"\r\n  (page)=\"pageChanged($event)\"\r\n  class=\"mt-5\"\r\n  aria-label=\"Select page\"\r\n>\r\n</mat-paginator>\r\n<!-- <div class=\"row\">\r\n  <div *ngFor=\"let member of members\" class=\"col-2\"></div>\r\n</div> -->\r\n\r\n<!-- <div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    [maxSize]=\"10\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div> -->\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.scss']\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent: string;\r\n  loading = false;\r\n\r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage() {\r\n    this.loading = true;\r\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\r\n      this.messageForm.reset();\r\n    }).finally(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\"\r\n        #scrollMe\r\n        style=\"overflow: scroll; height: 535px;\"\r\n        [scrollTop]=\"scrollMe.scrollHeight\"\r\n    >\r\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n            No messages yet... say hi by using the message box below\r\n        </div>\r\n\r\n        <ul \r\n            *ngIf=\"(messageService.messageThread$ | async).length > 0\" \r\n            class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n                <div>\r\n                    <span class=\"chat-img float-end\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" \r\n                            alt=\"{{message.senderUsername}}\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (unread)\r\n                                </span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \r\n                                    && message.senderUsername !== username\">\r\n                                    (read {{message.dateRead | timeago}})\r\n                                </span>\r\n                            </small>\r\n                        </div>\r\n                        <p>{{message.content}}</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input \r\n                    name=\"messageContent\"\r\n                    required\r\n                    [(ngModel)]=\"messageContent\"\r\n                    type=\"text\" \r\n                    class=\"form-control input-sm\" \r\n                    placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid || loading\" class=\"btn btn-primary\" type=\"submit\">Send\r\n                        <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { User } from 'src/app/_models/user';\r\nimport { take } from 'rxjs/operators';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { Photo } from 'src/app/_models/photo';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.scss']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropzoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService) { \r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any) {\r\n    this.hasBaseDropzoneOver = e;\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach(p => {\r\n        if (p.isMain) p.isMain = false;\r\n        if (p.id === photo.id) p.isMain = true;\r\n      })\r\n    })\r\n  } \r\n\r\n  deletePhoto(photoId: number) {\r\n    this.memberService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter(x => x.id !== photoId);\r\n    })\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    }\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n        this.member.photos.push(photo);\r\n         if (photo.isMain) {\r\n           this.user.photoUrl = photo.url;\r\n           this.member.photoUrl = photo.url;\r\n           this.accountService.setCurrentUser(this.user);\r\n         }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-2 d-flex flex-column\" *ngFor=\"let photo of member.photos\">\r\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\r\n        <div class=\"d-flex\">\r\n            <button \r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"setMainPhoto(photo)\"\r\n                [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'\r\n                class=\"btn btn-sm flex-grow-1\"\r\n            >Main</button>\r\n            <button \r\n                [disabled]=\"photo.isMain\"\r\n                (click)=\"deletePhoto(photo.id)\"\r\n                class=\"btn btn-sm btn-danger flex-grow-1\"\r\n            ><i class=\"fa fa-trash\"></i></button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row mt-3\">\r\n \r\n    <div class=\"col-md-3\">\r\n\r\n        <h3>Add Photos</h3>\r\n\r\n        <div ng2FileDrop\r\n             [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\r\n             (fileOver)=\"fileOverBase($event)\"\r\n             [uploader]=\"uploader\"\r\n             class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n             <i class=\"fa fa-upload fa-3x\"></i>\r\n            Drop photos here\r\n        </div>\r\n\r\n        Multiple\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\r\n\r\n        Single\r\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n    </div>\r\n\r\n    <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n\r\n        <h3>Upload queue</h3>\r\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n        <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th width=\"50%\">Name</th>\r\n                <th>Size</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let item of uploader.queue\">\r\n                <td><strong>{{ item?.file?.name }}</strong></td>\r\n                <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n        <div>\r\n            <div>\r\n                Queue progress:\r\n                <div class=\"progress\" style=\"\">\r\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                    (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n                <span class=\"fa fa-upload\"></span> Upload all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                    (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n                <span class=\"fa fa-ban\"></span> Cancel all\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                    (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n                <span class=\"fa fa-trash\"></span> Remove all\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\nimport Driver from 'driver.js';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss'],\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[] = [];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 10;\r\n  loading = false;\r\n\r\n  driver: Driver;\r\n\r\n  //\r\n\r\n  columns: string[] = [\r\n    'content',\r\n    'senderUsername',\r\n    'recipientUsername',\r\n    'messageSent',\r\n  ];\r\n  displayedColumns = [];\r\n\r\n  //\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private confirmService: ConfirmService,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n    // this.startNavigationGuide();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.handleColumns();\r\n\r\n    this.loading = true;\r\n    this.messageService\r\n      .getMessages(this.pageNumber, this.pageSize, this.container)\r\n      .subscribe((response) => {\r\n        this.messages = response.result;\r\n        this.pagination = response.pagination;\r\n        this.pagination.currentPage = response.pagination.currentPage - 1;\r\n        this.loading = false;\r\n\r\n        console.log('### ', this.messages);\r\n      });\r\n  }\r\n\r\n  handleColumns() {\r\n    console.log('### container', this.container);\r\n\r\n    if (this.container === 'Outbox') {\r\n      this.displayedColumns = this.columns.filter(\r\n        (column) => column !== 'senderUsername'\r\n      );\r\n    } else {\r\n      this.displayedColumns = this.columns.filter(\r\n        (column) => column !== 'recipientUsername'\r\n      );\r\n    }\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confirmService\r\n      .confirm('Confirm delete message', 'This cannot be undone')\r\n      .subscribe((result) => {\r\n        if (result) {\r\n          this.messageService.deleteMessage(id).subscribe(() => {\r\n            this.messages.splice(\r\n              this.messages.findIndex((m) => m.id === id),\r\n              1\r\n            );\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    if (this.pageNumber !== event.page) {\r\n      this.pageNumber = event.pageIndex + 1;\r\n      this.pageSize = event.pageSize;\r\n      this.loadMessages();\r\n    }\r\n  }\r\n\r\n  startNavigationGuide() {\r\n    if (!this.driver) {\r\n      this.driver = new Driver({\r\n        animate: true,\r\n        keyboardControl: true,\r\n      });\r\n\r\n      const steps = [\r\n        {\r\n          element: '#login-step3',\r\n          popover: {\r\n            title: 'Messages',\r\n            description:\r\n              'Message box that allows you to communicate with other members!',\r\n            position: 'bottom-center',\r\n          },\r\n        },\r\n      ];\r\n      console.log('### this driver', steps);\r\n      this.driver.defineSteps(steps);\r\n      this.driver.start();\r\n    }\r\n  }\r\n\r\n  resetNavigationGuide() {\r\n    if (this.driver) {\r\n      this.driver.reset();\r\n      this.driver = undefined;\r\n    }\r\n  }\r\n}\r\n","<section class=\"example-section mb-4\">\r\n  <mat-button-toggle-group\r\n    name=\"fontStyle\"\r\n    aria-label=\"Font Style\"\r\n    [(ngModel)]=\"container\"\r\n  >\r\n    <mat-button-toggle color=\"primary\" value=\"Unread\" (click)=\"loadMessages()\">\r\n      <mat-icon class=\"mx-2\">markunread</mat-icon>Unread\r\n    </mat-button-toggle>\r\n    <mat-button-toggle color=\"primary\" value=\"Inbox\" (click)=\"loadMessages()\">\r\n      <mat-icon class=\"mx-2\">inbox</mat-icon>Inbox\r\n    </mat-button-toggle>\r\n    <mat-button-toggle color=\"primary\" value=\"Outbox\" (click)=\"loadMessages()\">\r\n      <mat-icon class=\"mx-2\">send</mat-icon>Sent\r\n    </mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</section>\r\n\r\n<div *ngIf=\"messages?.length === 0\">\r\n  <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\" *ngIf=\"messages?.length > 0\">\r\n  <table mat-table [dataSource]=\"messages\">\r\n    <ng-container matColumnDef=\"content\">\r\n      <th mat-header-cell *matHeaderCellDef>Message</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.content }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"senderUsername\">\r\n      <th mat-header-cell *matHeaderCellDef>From</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <img\r\n          class=\"img-circle p-2\"\r\n          [src]=\"element.senderPhotoUrl || './assets/user.png'\"\r\n          [alt]=\"element.senderUsername\"\r\n        />\r\n        {{ element.senderUsername | titlecase }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"recipientUsername\">\r\n      <th mat-header-cell *matHeaderCellDef>To</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <img\r\n          class=\"img-circle p-2\"\r\n          [src]=\"element.recipientPhotoUrl || './assets/user.png'\"\r\n          [alt]=\"element.recipientUsername\"\r\n        />\r\n        {{ element.recipientUsername | titlecase }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"messageSent\">\r\n      <th mat-header-cell *matHeaderCellDef>Sent</th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        {{ element.messageSent | timeago }}\r\n      </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: displayedColumns\"\r\n      [routerLink]=\"\r\n        container === 'Outbox'\r\n          ? '/members/' + row.recipientUsername\r\n          : '/members/' + row.senderUsername\r\n      \"\r\n    ></tr>\r\n  </table>\r\n\r\n  <mat-paginator\r\n    *ngIf=\"pagination\"\r\n    [length]=\"pagination.totalItems\"\r\n    [pageSize]=\"pagination.itemsPerPage\"\r\n    [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n    [pageIndex]=\"pagination.currentPage\"\r\n    (page)=\"pageChanged($event)\"\r\n    aria-label=\"Select page\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n\r\n<!-- <div class=\"row\" *ngIf=\"messages?.length > 0\">\r\n  <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n    <thead>\r\n      <tr>\r\n        <th style=\"width: 40%\">Message</th>\r\n        <th style=\"width: 20%\">From / To</th>\r\n        <th style=\"width: 20%\">Sent / Received</th>\r\n        <th style=\"width: 20%\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        [hidden]=\"loading\"\r\n        *ngFor=\"let message of messages\"\r\n        routerLink=\"{{\r\n          container === 'Outbox'\r\n            ? '/members/' + message.recipientUsername\r\n            : '/members/' + message.senderUsername\r\n        }}\"\r\n        [queryParams]=\"{ tab: 3 }\"\r\n      >\r\n        <td>{{ message.content }}</td>\r\n        <td>\r\n          <div *ngIf=\"container === 'Outbox'\">\r\n            <img\r\n              class=\"img-circle rounded-circle me-2\"\r\n              src=\"{{ message.recipientPhotoUrl || './assets/user.png' }}\"\r\n              alt=\"{{ message.recipientUsername }}\"\r\n            />\r\n            <strong>{{ message.recipientUsername | titlecase }}</strong>\r\n          </div>\r\n          <div *ngIf=\"container !== 'Outbox'\">\r\n            <img\r\n              class=\"img-circle rounded-circle me-2\"\r\n              src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\r\n              alt=\"{{ message.senderUsername }}\"\r\n            />\r\n            <strong>{{ message.senderUsername | titlecase }}</strong>\r\n          </div>\r\n        </td>\r\n        <td>{{ message.messageSent | timeago }}</td>\r\n        <td>\r\n          <button\r\n            (click)=\"$event.stopPropagation()\"\r\n            (click)=\"deleteMessage(message.id)\"\r\n            class=\"btn btn-danger\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div> -->\r\n\r\n<!-- <mat-paginator\r\n  *ngIf=\"pagination\"\r\n  [length]=\"pagination.totalItems\"\r\n  [pageSize]=\"pagination.itemsPerPage\"\r\n  [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n  [pageIndex]=\"pagination.currentPage\"\r\n  (page)=\"pageChanged($event)\"\r\n  class=\"mt-5\"\r\n  aria-label=\"Select page\"\r\n>\r\n</mat-paginator> -->\r\n\r\n<!-- <div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    [maxSize]=\"10\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  title: string;\r\n  message: string;\r\n  btnOkText: string;\r\n  btnCancelText: string;\r\n  result: boolean;\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm() {\r\n    this.result = true;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n  decline() {\r\n    this.result = false;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>{{message}}</p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOkText}}</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\r\n  </div>\r\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.scss']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[]; \r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateRoles() {\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\r\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n            <input type=\"checkbox\"\r\n                class=\"form-check-input\"\r\n                [checked]=\"role.checked\"\r\n                value=\"role.name\"\r\n                (change)=\"role.checked = !role.checked\"\r\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\r\n            >\r\n            <label>{{role.name}}</label>\r\n        </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\nimport Driver from 'driver.js';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n\r\n  driver: Driver;\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public accountService: AccountService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.model.username = 'lisa';\r\n    this.model.password = 'Pa$$w0rd';\r\n\r\n    // setTimeout(() => {\r\n    //   this.startNavigationGuide();\r\n    // }, 1000);\r\n  }\r\n\r\n  startNavigationGuide() {\r\n    if (!this.driver) {\r\n      this.driver = new Driver({\r\n        animate: true,\r\n        keyboardControl: true,\r\n      });\r\n\r\n      const steps = [\r\n        {\r\n          element: '#step1',\r\n          popover: {\r\n            className: 'first-step-popover-class',\r\n            title: 'WELCOME TO DATING APP',\r\n            description:\r\n              'I would like to give you a quick tour. <br> You can register here if you are interested.',\r\n            position: 'bottom-center',\r\n          },\r\n        },\r\n        {\r\n          element: '#step2',\r\n          popover: {\r\n            title: 'Login',\r\n            description:\r\n              'Just type Just enter <strong>lisa</strong> or <strong>todd</strong> in username and click login!',\r\n            position: 'bottom-center',\r\n          },\r\n        },\r\n      ];\r\n      console.log('### this driver', steps);\r\n      this.driver.defineSteps(steps);\r\n      this.driver.start();\r\n    }\r\n  }\r\n\r\n  resetNavigationGuide() {\r\n    if (this.driver) {\r\n      this.driver.reset();\r\n      this.driver = undefined;\r\n    }\r\n  }\r\n\r\n  openLogin() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n\r\n    const dialogRef = this.dialog.open(LoginComponent, dialogConfig);\r\n\r\n    dialogRef\r\n      .afterClosed()\r\n      .subscribe(() => this.router.navigateByUrl('/members'));\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <a mat-stroked-button routerLink=\"/\" routerLinkActive=\"active\"\r\n      >Dating App</a\r\n    >\r\n    <span class=\"example-spacer\"></span>\r\n    <div fxHide.lt-md>\r\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n        <a\r\n          class=\"nav-link-1\"\r\n          mat-button\r\n          routerLink=\"/members\"\r\n          routerLinkActive=\"active\"\r\n          >Matches</a\r\n        >\r\n        <a\r\n          class=\"nav-link-1\"\r\n          mat-button\r\n          routerLink=\"/lists\"\r\n          routerLinkActive=\"active\"\r\n          >Lists</a\r\n        >\r\n        <a\r\n          class=\"nav-link-1\"\r\n          mat-button\r\n          routerLink=\"/messages\"\r\n          routerLinkActive=\"active\"\r\n          >Messages</a\r\n        >\r\n        <a\r\n          class=\"nav-link-1\"\r\n          mat-button\r\n          routerLink=\"/admin\"\r\n          routerLinkActive=\"active\"\r\n          *appHasRole=\"['Admin', 'Moderator']\"\r\n        >\r\n          Admin\r\n        </a>\r\n      </ng-container>\r\n      <a\r\n        class=\"nav-link-1\"\r\n        mat-button\r\n        routerLink=\"/errors\"\r\n        routerLinkActive=\"active\"\r\n        >Errors</a\r\n      >\r\n      <a\r\n        mat-button\r\n        (click)=\"openLogin()\"\r\n        *ngIf=\"(accountService.currentUser$ | async) === null\"\r\n        >Login\r\n      </a>\r\n    </div>\r\n\r\n    <ng-container *ngIf=\"accountService.currentUser$ | async as user\">\r\n      <button mat-button>\r\n        <span>Welcome {{ user.knownAs || user.username | titlecase }}! </span>\r\n      </button>\r\n\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n        <img\r\n          class=\"img-circle\"\r\n          src=\"{{ user.photoUrl || './assets/user.png' }}\"\r\n          alt=\"{{ user.username }}\"\r\n        />\r\n      </button>\r\n    </ng-container>\r\n\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item routerLink=\"/member/edit\">\r\n        <mat-icon>dialpad</mat-icon>\r\n        <span>Edit Profile</span>\r\n      </button>\r\n      <button mat-menu-item (click)=\"logout()\">\r\n        <mat-icon>voicemail</mat-icon>\r\n        <span>Logout</span>\r\n      </button>\r\n    </mat-menu>\r\n  </mat-toolbar-row>\r\n  <mat-toolbar-row fxHide.gt-sm fxLayoutAlign=\"center center\">\r\n    <div>\r\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n        <a\r\n          class=\"nav-link-1\"\r\n          mat-button\r\n          routerLink=\"/members\"\r\n          routerLinkActive=\"active\"\r\n          >Matches</a\r\n        >\r\n        <a\r\n          class=\"nav-link-1\"\r\n          mat-button\r\n          routerLink=\"/lists\"\r\n          routerLinkActive=\"active\"\r\n          >Lists</a\r\n        >\r\n        <a\r\n          class=\"nav-link-1\"\r\n          mat-button\r\n          routerLink=\"/messages\"\r\n          routerLinkActive=\"active\"\r\n          >Messages</a\r\n        >\r\n        <a\r\n          class=\"nav-link-1\"\r\n          mat-button\r\n          routerLink=\"/admin\"\r\n          routerLinkActive=\"active\"\r\n          *appHasRole=\"['Admin', 'Moderator']\"\r\n        >\r\n          Admin\r\n        </a>\r\n      </ng-container>\r\n      <a\r\n        class=\"nav-link-1\"\r\n        mat-button\r\n        routerLink=\"/errors\"\r\n        routerLinkActive=\"active\"\r\n        >Errors</a\r\n      >\r\n      <a\r\n        mat-button\r\n        (click)=\"openLogin()\"\r\n        *ngIf=\"(accountService.currentUser$ | async) === null\"\r\n        >Login\r\n      </a>\r\n    </div>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<!-- <nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n  <div>\r\n    <form\r\n      *ngIf=\"(accountService.currentUser$ | async) === null\"\r\n      #loginForm=\"ngForm\"\r\n      class=\"d-flex mt-2 mt-md-0\"\r\n      (ngSubmit)=\"login()\"\r\n      autocomplete=\"off\"\r\n      id=\"step2\"\r\n    >\r\n      <input\r\n        name=\"username\"\r\n        [(ngModel)]=\"model.username\"\r\n        class=\"form-control me-sm-2\"\r\n        type=\"text\"\r\n        placeholder=\"Enter lisa or todd to login\"\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        [(ngModel)]=\"model.password\"\r\n        class=\"form-control me-sm-2\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n    </form>\r\n  </div>\r\n</nav> -->\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AccountService } from '../_services/account.service';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<RegisterComponent>,\r\n    private _snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.intitializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n    console.log(this.maxDate);\r\n  }\r\n\r\n  intitializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: [\r\n        '',\r\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\r\n      ],\r\n      confirmPassword: [\r\n        '',\r\n        [Validators.required, this.matchValues('password')],\r\n      ],\r\n    });\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: true };\r\n    };\r\n  }\r\n\r\n  register() {\r\n    console.log(this.registerForm.value);\r\n    this.accountService.register(this.registerForm.value).subscribe({\r\n      next: (res) => {\r\n        console.log('### Successfully Registered ', res);\r\n        this._snackBar.open('Successfully Registered', 'Dance', {\r\n          panelClass: ['blue-snackbar'],\r\n          duration: 5000,\r\n          verticalPosition: 'bottom',\r\n          horizontalPosition: 'right',\r\n        });\r\n        this.dialogRef.close(true);\r\n      },\r\n      error: (err) => {\r\n        this.validationErrors = err;\r\n\r\n        console.log('### ERROR', err);\r\n        this._snackBar.open('Error occured', 'Dance', {\r\n          panelClass: ['red-snackbar'],\r\n          duration: 5000,\r\n          verticalPosition: 'bottom',\r\n          horizontalPosition: 'right',\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<div>\r\n  <h2>Sign up</h2>\r\n</div>\r\n<form\r\n  [formGroup]=\"registerForm\"\r\n  (ngSubmit)=\"registerForm.valid && register()\"\r\n  autocomplete=\"off\"\r\n>\r\n  <label\r\n    id=\"example-radio-group-label\"\r\n    style=\"margin-bottom: 1rem; margin-right: 0.5rem\"\r\n  >\r\n    I am a:\r\n  </label>\r\n  <mat-radio-group aria-label=\"Select an option\" formControlName=\"gender\">\r\n    <mat-radio-button value=\"male\" style=\"margin: 0.25rem\">\r\n      Male\r\n    </mat-radio-button>\r\n    <mat-radio-button value=\"female\" style=\"margin: 0.25rem\">\r\n      Female\r\n    </mat-radio-button>\r\n  </mat-radio-group>\r\n\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['username']\"\r\n    [label]=\"'Username'\"\r\n  ></app-text-input>\r\n\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['password']\"\r\n    [label]=\"'Password'\"\r\n    [type]=\"'password'\"\r\n  >\r\n  </app-text-input>\r\n\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['confirmPassword']\"\r\n    [label]=\"'Confirm Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['knownAs']\"\r\n    [label]=\"'Known As'\"\r\n  ></app-text-input>\r\n\r\n  <app-date-input\r\n    [formControl]=\"registerForm.controls['dateOfBirth']\"\r\n    [label]=\"'Date Of Birth'\"\r\n    [maxDate]=\"maxDate\"\r\n  ></app-date-input>\r\n\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['city']\"\r\n    [label]=\"'City'\"\r\n  ></app-text-input>\r\n\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['country']\"\r\n    [label]=\"'Country'\"\r\n  ></app-text-input>\r\n\r\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\r\n    <ul class=\"text-danger\">\r\n      <li *ngFor=\"let error of validationErrors\">\r\n        {{ error }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</form>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button\r\n    mat-raised-button\r\n    cdkFocusInitial\r\n    color=\"primary\"\r\n    (click)=\"register()\"\r\n  >\r\n    Register\r\n  </button>\r\n</mat-dialog-actions>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}